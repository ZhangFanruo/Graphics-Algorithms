#include <iostream>
#include <graphics.h>
#include <bits/stdc++.h>
#define ll long long int
using namespace std;
void dda_line(double x1,double y1,double x2,double y2)
{

    double dy=y2-y1,dx=x2-x1;
    double m=dy/dx;
    if(x1<=x2&&y1<=y2)    // 4th quad
    {
        if(abs(dy)<abs(dx))
        {
            while(x1<=x2)
            {
                putpixel(x1,y1,WHITE);
                y1+=m;
                x1++;
            }
        }
        else
        {
            while(y1<=y2)
            {
                putpixel(x1,y1,WHITE);
                x1+=1/m;
                y1++;
            }
        }

    }
    else if(x1<=x2&&y1>=y2)
    {
        if(abs(dy)<abs(dx))
        {
            while(x1<=x2)
            {
                putpixel(x1,y1,WHITE);
                y1+=m;
                x1++;
            }
        }
        else
        {
            while(y1>=y2)
            {
                putpixel(x1,y1,WHITE);
                x1-=1/m;
                y1--;
            }
        }
    }
    else if(x1>=x2&&y1<=y2)
    {
        if(abs(dy)<abs(dx))
        {
            while(x1>=x2)
            {
                putpixel(x1,y1,WHITE);
                y1-=m;
                x1--;
            }
        }
        else
        {
            while(y1<=y2)
            {
                putpixel(x1,y1,WHITE);
                x1+=1/m;
                y1++;
            }
        }
    }
    else
    {
        if(abs(dy)<abs(dx))
        {
            while(x1>=x2)
            {
                putpixel(x1,y1,WHITE);
                y1-=m;
                x1--;
            }
        }
        else
        {
            while(y1>=y2)
            {
                putpixel(x1,y1,WHITE);
                x1-=1/m;
                y1--;
            }
        }
    }
}

void mid_point_line(double x1,double y1,double x2,double y2)
{
   double dy=y2-y1,dx=x2-x1;
   double d;
   if(x1<=x2&&y1<=y2)
   {
       if(abs(dy)<abs(dx))
       {
           d=2*dy-dx;
           while(x1<=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)
               {
                   d+=2*dy;
               }
               else
               {
                   d+=2*(dy-dx);
                   y1++;
               }
               x1++;
           }
       }
       else
       {
           d=dy-2*dx;
           while(y1<=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=-2*dx;
               }
               else
               {
                   d+=2*(dy-dx);
                   x1++;
               }
               y1++;
           }
       }
   }
   else if(x1<=x2&&y1>=y2)
   {
       if(abs(dy)<abs(dx))
       {
           d=2*dy+dx;
           while(x1<=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=2*dy;
               }
               else
               {
                   d+=2*(dy+dx);
                   y1--;
               }
               x1++;
           }
       }
       else
       {
           d=dy+2*dx;
           while(y1>=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)
               {
                   d+=2*dx;
               }
               else
               {
                   d+=2*(dy+dx);
                   x1++;
               }
               y1--;
           }
       }
   }
   else if(x1>=x2&&y1<=y2)
   {
       if(abs(dy)<abs(dx))
       {
           d=-2*dy-dx;
           while(x1>=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=-2*dy;
               }
               else
               {
                   d+=-2*(dy+dx);
                   y1++;
               }
               x1--;
           }
       }
       else
       {
           d=-dy-2*dx;
           while(y1<=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)
               {
                   d+=-2*dx;
               }
               else
               {
                   d+=-2*(dy+dx);
                   x1--;
               }
               y1++;
           }
       }
   }
   else
   {
       if(abs(dy)<abs(dx))
       {
           d=-2*dy+dx;
           while(x1>=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)
               {
                   d+=-2*dy;
               }
               else
               {
                   d+=-2*(dy-dx);
                   y1--;
               }
               x1--;
           }
       }
       else
       {
           d=-dy+2*dx;
           while(y1>=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=2*dx;
               }
               else
               {
                   d+=2*(-dy+dx);
                   x1--;
               }
               y1--;
           }
       }
   }
}
void bresenham_line(double x1,double y1,double x2,double y2)
{
   double dy=y2-y1,dx=x2-x1;
   double d;
   if(x1<=x2&&y1<=y2)
   {
       if(abs(dy)<abs(dx))
       {
           d=2*dy-dx;
           while(x1<=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)
               {
                   d+=2*dy;
               }
               else
               {
                   d+=2*(dy-dx);
                   y1++;
               }
               x1++;
           }
       }
       else
       {
           d=2*dx-dy;
           while(y1<=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)
               {
                   d+=2*dx;
               }
               else
               {
                   d+=2*(dx-dy);
                   x1++;
               }
               y1++;
           }
       }
   }
   else if(x1<=x2&&y1>=y2)
   {
       if(abs(dy)<abs(dx))
       {
           d=-dx-2*dy;
           while(x1<=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)     //condition is oposite to what we found because  dy<0
               {
                   d+=-2*dy;
               }
               else
               {
                   d+=2*(-dx-dy);
                   y1--;
               }
               x1++;
           }
       }
       else
       {
           d=-dy-2*dx;
           while(y1>=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=-2*dx;
               }
               else
               {
                   d+=-2*(dy+dx);
                   x1++;
               }
               y1--;
           }
       }
   }
   else if(x1>=x2&&y1<=y2)
   {
       if(abs(dy)<abs(dx))
       {
           d=-2*dy-dx;
           while(x1>=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=-2*dy;
               }
               else
               {
                   d+=-2*(dy+dx);
                   y1++;
               }
               x1--;
           }
       }
       else
       {
           d=-dy-2*dx;
           while(y1<=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d<0)
               {
                   d+=-2*dx;
               }
               else
               {
                   d+=-2*(dy+dx);
                   x1--;
               }
               y1++;
           }
       }
   }
   else
   {
       if(abs(dy)<abs(dx))
       {
           d=2*dy-dx;
           while(x1>=x2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=2*dy;
               }
               else
               {
                   d+=2*(dy-dx);
                   y1--;
               }
               x1--;
           }
       }
       else
       {
           d=-dy+2*dx;
           while(y1>=y2)
           {
               putpixel(x1,y1,WHITE);
               if(d>0)
               {
                   d+=2*dx;
               }
               else
               {
                   d+=2*(dx-dy);
                   x1--;
               }
               y1--;
           }
       }
   }
}
int main()
{
    int gm=DETECT,gd;
    int i=0,a,b,c,d;
    initgraph(&gm,&gd,"C:\\TC\\BGI");
    initwindow(1080,720);
    while(i++<50)
    {
        while(!ismouseclick(WM_LBUTTONDOWN)) {}
        getmouseclick(WM_LBUTTONDOWN,a,b);
        while(!ismouseclick(WM_LBUTTONDOWN)) {}
        getmouseclick(WM_LBUTTONDOWN,c,d);
        dda_line(a*1.0,b*1.0,c*1.0,d*1.0);
        outtextxy(a,b,"Point 1");
        outtextxy(c,d,"Point 2");
        //mid_point_line(a*1.0,b*1.0,c*1.0,d*1.0);
        //bresenham_line(a*1.0,b*1.0,c*1.0,d*1.0);
    }
    getch();
    closegraph();
    return 0;
}
